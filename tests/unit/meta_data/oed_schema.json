{"PortNumber": {"field_desc": "Portfolio number: used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PortName": {"field_desc": "Portfolio name", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PortNotes": {"field_desc": "Portfolio notes, longer description than allowed in portfolio name", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(200)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccNumber": {"field_desc": "Account number:  used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "nvarchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccName": {"field_desc": "Account name", "file_names": ["Acc"], "required": "O", "sql_data_type": "nvarchar(100)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccGroup": {"field_desc": "Account group, could use to group multiple accounts (e.g. for binders)", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccStatus": {"field_desc": "Account status. Aside from predefined values, you can use other single character values for user specific purposes", "file_names": ["Acc"], "required": "O", "sql_data_type": "char(1)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "ExpiringAccNumber": {"field_desc": "Expiring account number", "file_names": ["Acc"], "required": "O", "sql_data_type": "nvarchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CedantName": {"field_desc": "Cedant name:  used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccCurrency": {"field_desc": "Account currency", "file_names": ["Acc"], "required": "R", "sql_data_type": "char(3)", "python_data_type": "string", "allow_blank": "NO", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccUserDef1": {"field_desc": "Account user defined field 1", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccUserDef2": {"field_desc": "Account user defined field 2", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccUserDef3": {"field_desc": "Account user defined field 3", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccUserDef4": {"field_desc": "Account user defined field 4", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccUserDef5": {"field_desc": "Account user defined field 5", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "FlexiAccZZZ": {"field_desc": "Flexible field that is stored in FlexiAcc table in ModifierName = ZZZ", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccPeril": {"field_desc": "Perils for account financial terms", "file_names": ["Acc"], "required": "CR", "sql_data_type": "varchar(250)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AccDedCode1Building": {"field_desc": "Account building deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDedType1Building": {"field_desc": "Account building deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDed1Building": {"field_desc": "Account building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMinDed1Building": {"field_desc": "Account minimum building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMaxDed1Building": {"field_desc": "Account maximum building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccDedCode2Other": {"field_desc": "Account other building deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDedType2Other": {"field_desc": "Account other building deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDed2Other": {"field_desc": "Account other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMinDed2Other": {"field_desc": "Account minimum other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMaxDed2Other": {"field_desc": "Account maximum other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccDedCode3Contents": {"field_desc": "Account contents deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDedType3Contents": {"field_desc": "Account contents deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDed3Contents": {"field_desc": "Account contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMinDed3Contents": {"field_desc": "Account minimum contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMaxDed3Contents": {"field_desc": "Account maximum contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccDedCode4BI": {"field_desc": "Account BI deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDedType4BI": {"field_desc": "Account BI deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDed4BI": {"field_desc": "Account BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMinDed4BI": {"field_desc": "Account minimum BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMaxDed4BI": {"field_desc": "Account maximum BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccDedCode5PD": {"field_desc": "Account PD deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDedType5PD": {"field_desc": "Account PD deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDed5PD": {"field_desc": "Account PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMinDed5PD": {"field_desc": "Account minimum PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMaxDed5PD": {"field_desc": "Account maximum PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccDedCode6All": {"field_desc": "Account blanket deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDedType6All": {"field_desc": "Account blanket deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccDed6All": {"field_desc": "Account blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMinDed6All": {"field_desc": "Account minimum blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccMaxDed6All": {"field_desc": "Account maximum blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccLimitCode1Building": {"field_desc": "Account building limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimitType1Building": {"field_desc": "Account building limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimit1Building": {"field_desc": "Account building limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccLimitCode2Other": {"field_desc": "Account other building limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimitType2Other": {"field_desc": "Account other building limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimit2Other": {"field_desc": "Account other building limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccLimitCode3Contents": {"field_desc": "Account contents limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimitType3Contents": {"field_desc": "Account contents limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimit3Contents": {"field_desc": "Account contents limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccLimitCode4BI": {"field_desc": "Account BI limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimitType4BI": {"field_desc": "Account BI limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimit4BI": {"field_desc": "Account BI limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccLimitCode5PD": {"field_desc": "Account PD limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimitType5PD": {"field_desc": "Account PD limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimit5PD": {"field_desc": "Account PD limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AccLimitCode6All": {"field_desc": "Account blanket limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimitType6All": {"field_desc": "Account blanket limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "AccLimit6All": {"field_desc": "Account blanket limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolNumber": {"field_desc": "Policy number:  used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolStatus": {"field_desc": "Policy layer status. Aside from predefined values, other single character values for user specific purposes can be used.", "file_names": ["Acc"], "required": "O", "sql_data_type": "char(1)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolInceptionDate": {"field_desc": "Policy inception date - in ISO 8601 format: YYYY-MM-DD", "file_names": ["Acc"], "required": "O", "sql_data_type": "smalldatetime", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolExpiryDate": {"field_desc": "Policy expiry date - in ISO 8601 format: YYYY-MM-DD", "file_names": ["Acc"], "required": "O", "sql_data_type": "smalldatetime", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "ProducerName": {"field_desc": "Producer name:  used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "Underwriter": {"field_desc": "Underwriter name", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "BranchName": {"field_desc": "Branch name", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LOB": {"field_desc": "Line of business:  used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "ExpiringPolNumber": {"field_desc": "Expiring policy number", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolPerilsCovered": {"field_desc": "Policy perils covered", "file_names": ["Acc"], "required": "R", "sql_data_type": "varchar(250)", "python_data_type": "string", "allow_blank": "NO", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolGrossPremium": {"field_desc": "Policy gross premium", "file_names": ["Acc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolTax": {"field_desc": "Policy insurance tax amount", "file_names": ["Acc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolBrokerage": {"field_desc": "Policy brokerage amount", "file_names": ["Acc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolNetPremium": {"field_desc": "Policy net premium", "file_names": ["Acc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LayerNumber": {"field_desc": "Layer number", "file_names": ["Acc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "LayerParticipation": {"field_desc": "Insurance company share of the policy layer. Values between 0 to 1 (e.g. 12% entered as 0.12)", "file_names": ["Acc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": 1, "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "LayerLimit": {"field_desc": "Policy layer limit (always treated as amount)", "file_names": ["Acc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LayerAttachment": {"field_desc": "Policy layer attachment point (always treated as amount)", "file_names": ["Acc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "HoursClause": {"field_desc": "For perils with an inherent event duration, the insurance contract may contain an hours clause that limits the time in which claims can be added up and assigned to one event", "file_names": ["Acc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolPeril": {"field_desc": "Perils for policy financial terms", "file_names": ["Acc"], "required": "CR", "sql_data_type": "varchar(250)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolDedCode1Building": {"field_desc": "Policy building deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDedType1Building": {"field_desc": "Policy building deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDed1Building": {"field_desc": "Policy building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMinDed1Building": {"field_desc": "Policy minimum building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMaxDed1Building": {"field_desc": "Policy maximum building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolDedCode2Other": {"field_desc": "Policy other building deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDedType2Other": {"field_desc": "Policy other building deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDed2Other": {"field_desc": "Policy other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMinDed2Other": {"field_desc": "Policy minimum other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMaxDed2Other": {"field_desc": "Policy maximum other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolDedCode3Contents": {"field_desc": "Policy contents deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDedType3Contents": {"field_desc": "Policy contents deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDed3Contents": {"field_desc": "Policy contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMinDed3Contents": {"field_desc": "Policy minimum contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMaxDed3Contents": {"field_desc": "Policy maximum contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolDedCode4BI": {"field_desc": "Policy BI deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDedType4BI": {"field_desc": "Policy BI deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDed4BI": {"field_desc": "Policy BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMinDed4BI": {"field_desc": "Policy minimum BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMaxDed4BI": {"field_desc": "Policy maximum BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolDedCode5PD": {"field_desc": "Policy PD deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDedType5PD": {"field_desc": "Policy PD deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDed5PD": {"field_desc": "Policy PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMinDed5PD": {"field_desc": "Policy minimum PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMaxDed5PD": {"field_desc": "Policy maximum PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolDedCode6All": {"field_desc": "Policy blanket deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDedType6All": {"field_desc": "Policy blanket deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolDed6All": {"field_desc": "Policy blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMinDed6All": {"field_desc": "Policy minimum blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolMaxDed6All": {"field_desc": "Policy maximum blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolLimitCode1Building": {"field_desc": "Policy building limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimitType1Building": {"field_desc": "Policy building limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimit1Building": {"field_desc": "Policy building limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolLimitCode2Other": {"field_desc": "Policy other building limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimitType2Other": {"field_desc": "Policy other building limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimit2Other": {"field_desc": "Policy other building limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolLimitCode3Contents": {"field_desc": "Policy contents limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimitType3Contents": {"field_desc": "Policy contents limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimit3Contents": {"field_desc": "Policy contents limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolLimitCode4BI": {"field_desc": "Policy BI limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimitType4BI": {"field_desc": "Policy BI limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimit4BI": {"field_desc": "Policy BI limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolLimitCode5PD": {"field_desc": "Policy PD limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimitType5PD": {"field_desc": "Policy PD limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimit5PD": {"field_desc": "Policy PD limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PolLimitCode6All": {"field_desc": "Policy blanket limit code (annual aggregate only)", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimitType6All": {"field_desc": "Policy blanket limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "PolLimit6All": {"field_desc": "Policy blanket limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "StepFunctionName": {"field_desc": "Step function name", "file_names": ["Acc"], "required": "CR", "sql_data_type": "varchar(30)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "StepTriggerType": {"field_desc": "Code that represents how, and for which coverages, pay-outs are triggered.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN, "valid_values": [1, 2, 3, 4, 5]}, "StepNumber": {"field_desc": "Number between 1 and 10 that is used to sort the step function in the correct order.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[1,10]", "sec_mod": NaN, "minval": "1", "maxval": "10"}, "PayOutType": {"field_desc": "Refers to PayoutBuilding, PayoutContents, PayoutBuildingContents. Payout can be % TIV, % Loss, a monetary amount, or % Limit.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "TriggerType": {"field_desc": "Refers to TriggerStart and TriggerEnd fields which could be specified as a % TIV, % Loss or a monetary amount.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "TriggerBuildingStart": {"field_desc": "Starting value of the building damage range over which the corresponding pay-out(s) should be made.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "TriggerBuildingEnd": {"field_desc": "Ending value of the building damage range over which the corresponding pay-out(s) should be made.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "DeductibleBuilding": {"field_desc": "Building deductible that can be used, for example, to account for fire policies before applying step functions.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutBuildingStart": {"field_desc": "Pay-out amount for the building losses for this step. If a ramp policy then it represents the start payout value.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutBuildingEnd": {"field_desc": "Pay-out amount for the end-point building losses for this ramp. This field should only be used if you have a ramp policy to indicate the end of the building payout. Otherwise, it should be left blank.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutLimitBuilding": {"field_desc": "Pay-out limit for building", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "TriggerContentsStart": {"field_desc": "Starting value of the content damage range over which the corresponding pay-out(s) should be made.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "TriggerContentsEnd": {"field_desc": "Ending value of the content damage range over which the corresponding pay-out(s) should be made.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "DeductibleContents": {"field_desc": "Content deductible that can be used, for example, to account for fire policies before applying step functions.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutContentsStart": {"field_desc": "Pay-out amount for the contents losses for this step. If a ramp policy then it represents the start payout value.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutContentsEnd": {"field_desc": "Pay-out amount for the end-point contents losses for this ramp. This field should only be used if you have a ramp policy to indicate the end of the contents payout. Otherwise, it should be left blank.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutLimitContents": {"field_desc": "Pay-out limit for contents", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "TriggerBuildingContentsStart": {"field_desc": "Starting value of the building and content damage range over which the corresponding pay-out(s) should be made.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "TriggerBuildingContentsEnd": {"field_desc": "Ending value of the building and content damage range over which the corresponding pay-out(s) should be made.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "DeductibleBuildingContents": {"field_desc": "Building and contents deductible that can be used, for example, to account for fire policies before applying step functions.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutBuildingContentsStart": {"field_desc": "Pay-out amount for the building and contents losses for this step. If a ramp policy then it represents the start payout value.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutBuildingContentsEnd": {"field_desc": "Pay-out amount for the end-point building and contents losses for this ramp. This field should only be used if you have a ramp policy to indicate the end of the building and contents payout. Otherwise, it should be left blank.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "PayOutLimitBuildingContents": {"field_desc": "Pay-out limit for building and contents", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "ExtraExpenseFactor": {"field_desc": "A factor that is applied to main coverage loss for extra expenses. This value, entered as a decimal, should be the same for all steps for a policy contract and must be a value >0 and \u22641. For example, 0.12 for 12%.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "ExtraExpenseLimit": {"field_desc": "A limit that applies to the total extra expense loss", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "DebrisRemovalFactor": {"field_desc": "A factor for a conditional coverage which tends to apply to all steps and is to cover Debris Removal. This value, entered as a decimal, should be the same for all steps for a policy contract and must be a value >0 and \u22641. For example, 0.12 for 12%.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "MinimumTIV": {"field_desc": "Minimum replacement value for which pay-outs to the corresponding damage range will be allowed.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "ScaleFactor": {"field_desc": "Percentage factor used to scale calculated losses. This value, entered as a decimal, should be the same for all steps for a policy contract and must be a value >0 and \u22641. For example, 0.12 for 12%.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "IsLimitAtDamage": {"field_desc": "Indicates whether the pay-out is limited by the actual ground-up loss.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "PolUserDef1": {"field_desc": "Policy user defined field", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolUserDef2": {"field_desc": "Policy user defined field", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolUserDef3": {"field_desc": "Policy user defined field", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolUserDef4": {"field_desc": "Policy user defined field", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PolUserDef5": {"field_desc": "Policy user defined field", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "FlexiPolZZZ": {"field_desc": "Flexible field that is stored in FlexiPol table in ModifierName = ZZZ", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CondNumber": {"field_desc": "Condition number identifies a unique set of condition financial terms applicable to one or more CondTag's.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CondName": {"field_desc": "Condition name.", "file_names": ["Acc"], "required": "O", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CondPriority": {"field_desc": "Condition priority: specifies the order in which special conditions apply if multiple conditions apply to one location.", "file_names": ["Acc"], "required": "CR", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "CondPeril": {"field_desc": "Perils for condition financial terms", "file_names": ["Acc"], "required": "CR", "sql_data_type": "varchar(250)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CondDedCode1Building": {"field_desc": "Special condition building deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDedType1Building": {"field_desc": "Special condition building deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDed1Building": {"field_desc": "Special condition building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMinDed1Building": {"field_desc": "Special condition minimum building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMaxDed1Building": {"field_desc": "Special condition maximum building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondDedCode2Other": {"field_desc": "Special condition other building deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDedType2Other": {"field_desc": "Special condition other building deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDed2Other": {"field_desc": "Special condition other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMinDed2Other": {"field_desc": "Special condition minimum other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMaxDed2Other": {"field_desc": "Special condition maximum other building deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondDedCode3Contents": {"field_desc": "Special condition contents deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDedType3Contents": {"field_desc": "Special condition contents deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDed3Contents": {"field_desc": "Special condition contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMinDed3Contents": {"field_desc": "Special condition minimum contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMaxDed3Contents": {"field_desc": "Special condition maximum contents deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondDedCode4BI": {"field_desc": "Special condition BI deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDedType4BI": {"field_desc": "Special condition BI deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDed4BI": {"field_desc": "Special condition BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMinDed4BI": {"field_desc": "Special condition minimum BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMaxDed4BI": {"field_desc": "Special condition maximum BI deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondDedCode5PD": {"field_desc": "Special condition PD deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDedType5PD": {"field_desc": "Special condition PD deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDed5PD": {"field_desc": "Special condition PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMinDed5PD": {"field_desc": "Special condition minimum PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMaxDed5PD": {"field_desc": "Special condition maximum PD deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondDedCode6All": {"field_desc": "Special condition blanket deductible code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDedType6All": {"field_desc": "Special condition blanket deductible type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondDed6All": {"field_desc": "Special condition blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMinDed6All": {"field_desc": "Special condition minimum blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondMaxDed6All": {"field_desc": "Special condition maximum blanket deductible", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondLimitCode1Building": {"field_desc": "Special condition building limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimitType1Building": {"field_desc": "Special condition building limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimit1Building": {"field_desc": "Special condition building limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondLimitCode2Other": {"field_desc": "Special condition other building limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimitType2Other": {"field_desc": "Special condition other building limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimit2Other": {"field_desc": "Special condition other building limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondLimitCode3Contents": {"field_desc": "Special condition contents limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimitType3Contents": {"field_desc": "Special condition contents limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimit3Contents": {"field_desc": "Special condition contents limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondLimitCode4BI": {"field_desc": "Special condition BI limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimitType4BI": {"field_desc": "Special condition BI limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimit4BI": {"field_desc": "Special condition BI limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondLimitCode5PD": {"field_desc": "Special condition PD limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimitType5PD": {"field_desc": "Special condition PD limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimit5PD": {"field_desc": "Special condition PD limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "CondLimitCode6All": {"field_desc": "Special condition blanket limit code", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimitType6All": {"field_desc": "Special condition blanket limit type", "file_names": ["Acc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "CondLimit6All": {"field_desc": "Special condition blanket limit", "file_names": ["Acc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocNumber": {"field_desc": "Location number:  used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "nvarchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocName": {"field_desc": "Location name", "file_names": ["Loc"], "required": "O", "sql_data_type": "nvarchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocGroup": {"field_desc": "Location group name:  used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "nvarchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CorrelationGroup": {"field_desc": "Correlation Group: indicates which locations should be correlated between each other in Oasis LMF.", "file_names": ["Loc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "IsPrimary": {"field_desc": "Whether the location in LocGroup is the primary building in the group", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "IsTenant": {"field_desc": "Whether property is occupied by a tenant or not", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "BuildingID": {"field_desc": "Unique building identification number", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocInceptionDate": {"field_desc": "Location inception date - in ISO 8601 format: YYYY-MM-DD", "file_names": ["Loc"], "required": "O", "sql_data_type": "smalldatetime", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocExpiryDate": {"field_desc": "Location expiry date - in ISO 8601 format: YYYY-MM-DD", "file_names": ["Loc"], "required": "O", "sql_data_type": "smalldatetime", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PercentComplete": {"field_desc": "Completeness percentage of the construction project at this location. The project completion percentage is by the cost of the project. Values between 0 to 1 (e.g. 12% enterd as 0.12)", "file_names": ["Loc"], "required": "O", "sql_data_type": "decimal", "python_data_type": "float", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "CompletionDate": {"field_desc": "Construction project completion date - in ISO 8601 format: YYYY-MM-DD", "file_names": ["Loc"], "required": "O", "sql_data_type": "date", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CountryCode": {"field_desc": "Country code: used for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "O", "sql_data_type": "char(2)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN, "valid_values": ["A1", "A2", "A3", "A4", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "AO", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "AZ", "B1", "B2", "B3", "BA", "BB", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BL", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW", "BY", "BZ", "C1", "C2", "C3", "CA", "CC", "CD", "CF", "CG", "CH", "CI", "CK", "CL", "CM", "CN", "CO", "CR", "CU", "CV", "CW", "CX", "CY", "CZ", "DE", "DJ", "DK", "DM", "DO", "DZ", "E1", "E2", "EC", "EE", "EG", "EH", "ER", "ES", "ET", "F1", "FI", "FJ", "FK", "FM", "FO", "FR", "G1", "G2", "GA", "GB", "GD", "GE", "GF", "GG", "GH", "GI", "GL", "GM", "GN", "GP", "GQ", "GR", "GS", "GT", "GU", "GW", "GY", "HK", "HM", "HN", "HR", "HT", "HU", "I1", "ID", "IE", "IL", "IM", "IN", "IO", "IQ", "IR", "IS", "IT", "J1", "JE", "JM", "JO", "JP", "KE", "KG", "KH", "KI", "KM", "KN", "KP", "KR", "KW", "KY", "KZ", "LA", "LB", "LC", "LI", "LK", "LR", "LS", "LT", "LU", "LV", "LY", "M1", "M2", "M3", "MA", "MC", "MD", "ME", "MF", "MG", "MH", "MK", "ML", "MM", "MN", "MO", "MP", "MQ", "MR", "MS", "MT", "MU", "MV", "MW", "MX", "MY", "MZ", "N1", "N2", "N3", NaN, "NC", "NE", "NF", "NG", "NI", "NL", "NO", "NP", "NR", "NU", "NZ", "OM", "PA", "PE", "PF", "PG", "PH", "PK", "PL", "PM", "PN", "PR", "PS", "PT", "PW", "PY", "QA", "R1", "RE", "RO", "RS", "RU", "RW", "S1", "S2", "S3", "SA", "SB", "SC", "SD", "SE", "SG", "SH", "SI", "SJ", "SK", "SL", "SM", "SN", "SO", "SR", "SS", "ST", "SV", "SX", "SY", "SZ", "T1", "TC", "TD", "TF", "TG", "TH", "TJ", "TK", "TL", "TM", "TN", "TO", "TR", "TT", "TV", "TW", "TZ", "U1", "UA", "UG", "UM", "US", "UY", "UZ", "V1", "V2", "VA", "VC", "VE", "VG", "VI", "VN", "VU", "W4", "W5", "WF", "WS", "XB", "XE", "XK", "XS", "XW", "YE", "YT", "ZA", "ZM", "ZW"]}, "Latitude": {"field_desc": "Latitude in degrees (-90.0 to +90.0)", "file_names": ["Loc"], "required": "O", "sql_data_type": "decimal", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[-90,90]", "sec_mod": NaN, "minval": "-90", "maxval": "90"}, "Longitude": {"field_desc": "Longitude in degrees (-180.0 to +180.0)", "file_names": ["Loc"], "required": "O", "sql_data_type": "decimal", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[-180,180]", "sec_mod": NaN, "minval": "-180", "maxval": "180"}, "StreetAddress": {"field_desc": "Street address including house number ", "file_names": ["Loc"], "required": "O", "sql_data_type": "nvarchar(100)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "PostalCode": {"field_desc": "Postcode: the highest resolution postcode most often used. (e.g. 5 digit zip for the US).", "file_names": ["Loc"], "required": "O", "sql_data_type": "nvarchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "City": {"field_desc": "City", "file_names": ["Loc"], "required": "O", "sql_data_type": "nvarchar(50)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AreaCode": {"field_desc": "Code representing typically the largest sub-division in a country (e.g. State code). See AreaCode Values sheet for details.", "file_names": ["Loc"], "required": "O", "sql_data_type": "nvarchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN, "valid_values": ["101", "102", "103", "104", "105", "106", "107", "108", "109", "201", "202", "203", "204", "205", "206", "207", "208", "209", "210", "301", "302", "303", "304", "305", "306", "307", "308", "309", "310", "311", "312", "313", "314", "315", "316", "317", "318", "319", "320", "321", "322", "323", "324", "325", "401", "402", "403", "404", "405", "406", "407", "408", "409", "410", "411", "412", "413", "414", "415", "416", "417", "418", "501", "502", "503", "504", "505", "506", "601", "602", "603", "604", "605", "606", "607", "608", "609", "610", "611", "612", "613", "614", "615", "616", "617", "701", "702", "703", "704", "705", "706", "707", "708", "709", "801", "802", "803", "804", "901", "902", "903", "904", "905", "906", "907", "908", "909", "910", "911", "912", "913", "914", "915", "916", "917", "918", "919", "920", "921", "922", "923", "ACT", "NSW", "NT", "QDL", "SA", "TAS", "VIC", "WA", "1", "10", "11", "2", "3", "4", "5", "6", "7", "8", "9", "11", "12", "13", "21", "23", "24", "25", "31", "32", "33", "34", "35", "36", "37", "38", "41", "42", "43", "44", "45", "46", "51", "52", "53", "54", "55", "56", "57", "61", "62", "63", "64", "71", "72", "73", "81", "82", "83", "84", "85", "91", "92", "93", "1", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "2", "3", "4", "5", "6", "7", "8", "9", "1", "2", "3", "4", "5", "6", "7", "8", "9", "NL", "PE", "NS", "NB", "QC", "ON", "MB", "SK", "AB", "BC", "YT", "NT", "NU", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "11", "12", "13", "14", "15", "21", "22", "23", "31", "32", "33", "34", "35", "36", "37", "41", "42", "43", "44", "45", "46", "50", "51", "52", "53", "54", "61", "62", "63", "64", "65", "05", "08", "11", "13", "15", "17", "18", "19", "20", "23", "25", "27", "41", "44", "47", "50", "52", "54", "63", "66", "68", "70", "73", "76", "81", "85", "86", "88", "91", "94", "95", "97", "99", "1", "10", "11", "12", "13", "14", "2", "3", "4", "5", "6", "7", "8", "9", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "101", "102", "150", "200", "250", "300", "350", "400", "420", "500", "550", "600", "650", "700", "760", "800", "1", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "2", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "3", "30", "4", "5", "6", "7", "8", "9", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "90", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "21", "22", "23", "24", "25", "26", "27", "28", "29", "2A", "2B", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "99", "01", "12", "22", "28", "48", "OCS", "AB", "AL", "B", "BA", "BB", "BD", "BH", "BL", "BN", "BR", "BS", "BT", "CA", "CB", "CF", "CH", "CM", "CO", "CR", "CT", "CV", "CW", "DA", "DD", "DE", "DG", "DH", "DL", "DN", "DT", "DY", "E", "EC", "EH", "EN", "EX", "FK", "FY", "G", "GL", "GU", "GY", "HA", "HD", "HG", "HP", "HR", "HS", "HU", "HX", "IC", "IG", "IM", "IP", "IV", "JE", "KA", "KT", "KW", "KY", "L", "LA", "LD", "LE", "LL", "LN", "LS", "LU", "M", "ME", "MK", "ML", "N", "NE", "NG", "NN", "NP", "NR", "NW", "OL", "OX", "PA", "PE", "PH", "PL", "PO", "PR", "RG", "RH", "RM", "S", "SA", "SE", "SG", "SK", "SL", "SM", "SN", "SO", "SP", "SR", "SS", "ST", "SW", "SY", "TA", "TD", "TF", "TN", "TQ", "TR", "TS", "TW", "UB", "W", "WA", "WC", "WD", "WF", "WN", "WR", "WS", "WV", "YO", "ZE", "01", "03", "04", "05", "06", "07", "11", "12", "13", "14", "15", "16", "17", "21", "22", "23", "24", "31", "32", "33", "34", "41", "42", "43", "44", "51", "52", "53", "54", "55", "56", "57", "58", "59", "61", "62", "63", "64", "65", "71", "72", "73", "81", "82", "83", "84", "85", "91", "92", "93", "94", "A1", "A2", "A3", "A4", "1", "2", "3", "4", "5", "6", "7", "8", "9", "11", "12", "13", "14", "15", "16", "17", "18", "19", "21", "31", "32", "33", "34", "35", "36", "51", "52", "53", "61", "62", "63", "64", "71", "72", "73", "74", "75", "76", "81", "82", "91", "94", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "18", "19", "20", "22", "23", "24", "25", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012", "013", "014", "015", "016", "017", "018", "019", "020", "021", "022", "023", "024", "025", "026", "027", "028", "029", "030", "031", "032", "033", "034", "035", "036", "037", "038", "039", "040", "041", "042", "043", "044", "045", "046", "047", "048", "049", "050", "051", "052", "053", "054", "055", "056", "057", "058", "059", "060", "061", "062", "063", "064", "065", "066", "067", "068", "069", "070", "071", "072", "073", "074", "075", "076", "077", "078", "079", "080", "081", "082", "083", "084", "085", "086", "087", "088", "089", "090", "091", "092", "093", "094", "095", "096", "097", "098", "099", "100", "101", "102", "103", "104", "105", "106", "107", "888", "999", "1", "10", "11", "12", "13", "14", "2", "3", "4", "5", "6", "7", "8", "9", "100", "1010", "1020", "1030", "1040", "1110", "1120", "1130", "1140", "1150", "1160", "1170", "1200", "210", "220", "230", "240", "310", "320", "330", "410", "420", "430", "440", "510", "520", "530", "610", "620", "630", "640", "650", "660", "710", "720", "730", "810", "820", "830", "840", "850", "860", "910", "920", "930", "940", "950", "11", "21", "22", "23", "24", "25", "26", "31", "32", "33", "34", "35", "36", "37", "38", "39", "1", "2", "3", "4", "5", "6", "7", "01", "02", "03", "05", "06", "07", "08", "09", "10", "11", "12", "13", "40", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "14", "15", "16", "17", "18", "19", "20", "SJ", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "1", "101", "103", "105", "107", "109", "11", "111", "113", "115", "117", "119", "121", "123", "125", "127", "129", "13", "131", "133", "135", "137", "139", "141", "143", "145", "147", "149", "15", "151", "153", "17", "19", "21", "23", "25", "27", "29", "3", "31", "33", "35", "37", "39", "41", "43", "45", "47", "49", "5", "51", "53", "54", "55", "57", "59", "61", "63", "65", "67", "69", "7", "71", "73", "75", "77", "79", "81", "83", "85", "87", "89", "9", "91", "93", "95", "97", "99", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "31", "32", "41", "42", "43", "44", "45", "46", "47", "48", "49", "01", "02", "04", "05", "06", "07", "08", "09", "10", "12", "13", "14", "17", "18", "19", "20", "21", "22", "23", "24", "25", "1", "2", "3", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "1", "2", "3", "4", "5", "6", "7", "8", "9", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "63", "64", "71", "72", "AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA", "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME", "MI", "MN", "MO", "MS", "MT", "NC", "ND", "NE", "NH", "NJ", "NM", "NV", "NY", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY", "1", "2", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "1", "2", "3", "4", "5", "6", "7", "10", "20", "30"]}, "AreaName": {"field_desc": "Name relating to the AreaCode (e.g. State name). See AreaCode Values sheet for details.", "file_names": ["Loc"], "required": "O", "sql_data_type": "nvarchar(50)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "GeogSchemeXX": {"field_desc": "Geography scheme: Descriptor of the geography scheme used in relation to the geography name in the corresponding GeogName field (e.g. PC4). The 'XX' must be changed to an integer (GeogScheme1......> GeogScheme20 etc) and the user can specify values in addition to those listed in the GeogScheme values list, but user defined scheme values must start with 'X'.", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(5)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "GeogNameXX": {"field_desc": "Geography name: Descriptor of the geographical area, using the scheme referenced in the corresponding GeogScheme field (e.g. SO31)", "file_names": ["Loc"], "required": "O", "sql_data_type": "nvarchar(50)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "AddressMatch": {"field_desc": "Address match from geocoder: indicating the resolution that the latitude / longitude represents", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN, "valid_values": [0, 1, 10, 2, 20, 3, 4, 5, 6, 7, 8, 9]}, "GeocodeQuality": {"field_desc": "Geocode quality (values between 0 and 1 e.g. 80% is entered as 0.8)", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": NaN, "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "Geocoder": {"field_desc": "Company name / version of geocoder. Free text field.", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "OrgOccupancyScheme": {"field_desc": "Original occupancy scheme", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(10)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "OrgOccupancyCode": {"field_desc": "Original occupancy code", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(100)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "OrgConstructionScheme": {"field_desc": "Original construction scheme", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(10)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "OrgConstructionCode": {"field_desc": "Original construction code", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(100)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "OccupancyCode": {"field_desc": "OED occupancy code", "file_names": ["Loc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": "1000", "valid_value_range": "nan", "sec_mod": NaN, "valid_values": [1000, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1200, 1201, 1210, 1211, 1212, 1213, 1214, 1215, 1220, 1230, 1231, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1300, 1301, 1302, 1303, 1304, 1305, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 2000, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2150, 2151, 2152, 2153, 2154, 2155, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2250, 2251, 2252, 2253, 2300, 2301, 2302, 2303, 2304, 2305, 2350, 2351, 2352, 2400, 2401, 2402, 2403, 2404, 2450, 2460, 2461, 2470, 2500, 2505, 2510, 2515, 2520, 2521, 2530, 2531, 2541, 2542, 2550, 2560, 2600, 2610, 2611, 2612, 2613, 2620, 2650, 2700, 2750, 2760, 2770, 2780, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031]}, "ConstructionCode": {"field_desc": "OED construction code", "file_names": ["Loc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": "5000", "valid_value_range": "nan", "sec_mod": NaN, "valid_values": [5000, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5100, 5101, 5102, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5110, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5301, 5302, 5303, 5304, 5305, 5306, 5309, 5310, 5350, 5351, 5352, 5353, 5354, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5451, 5452, 5453, 5501, 5502, 5503, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5701, 5702, 5703, 5751, 5752, 5753, 5754, 5755, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, 5873, 5874, 5875, 5900, 5901, 5902, 5951, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 6000, 6051, 6052, 6053, 6054, 6055, 6056, 6100, 6101, 6102, 6103, 6104, 6105, 6106, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 7000, 7001, 7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012, 7013]}, "YearBuilt": {"field_desc": "Year built (4 digit year)", "file_names": ["Loc"], "required": "O", "sql_data_type": "smallint", "python_data_type": "int", "allow_blank": "YES", "default": 0, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "NumberOfStoreys": {"field_desc": "Number of storeys", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "NumberOfBuildings": {"field_desc": "Number of buildings", "file_names": ["Loc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "FloorArea": {"field_desc": "Floor area: the total area across all floors", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "FloorAreaUnit": {"field_desc": "Units in which FloorArea is specified", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "11", "valid_value_range": "nan", "sec_mod": NaN}, "LocUserDef1": {"field_desc": "Location user defined field 1", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocUserDef2": {"field_desc": "Location user defined field 2", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocUserDef3": {"field_desc": "Location user defined field 3", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocUserDef4": {"field_desc": "Location user defined field 4", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocUserDef5": {"field_desc": "Location user defined field 5", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "FlexiLocZZZ": {"field_desc": "Flexible field that is stored in FlexiLoc table in ModifierName = ZZZ", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(40)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocPerilsCovered": {"field_desc": "Location perils covered", "file_names": ["Loc"], "required": "R", "sql_data_type": "varchar(250)", "python_data_type": "string", "allow_blank": "NO", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "BuildingTIV": {"field_desc": "Building Total Insured Value", "file_names": ["Loc"], "required": "R", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "NO", "default": NaN, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "OtherTIV": {"field_desc": "Other Building Insured Value (primarily aimed at specific US policies). For motor exposures, use this field for TIV along with appropriate motor construction code.", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "Yes", "default": NaN, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "ContentsTIV": {"field_desc": "Contents Total Insured Value", "file_names": ["Loc"], "required": "R", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "NO", "default": NaN, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "BITIV": {"field_desc": "Business Interruption (BI) Total Insured Value", "file_names": ["Loc"], "required": "R", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "NO", "default": NaN, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "BIPOI": {"field_desc": "BI period of indemnity (in days, in increments of 0.5 days). Default value = 365 (1 year).", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "365", "valid_value_range": "[0,3650]", "sec_mod": NaN, "minval": "0", "maxval": "3650"}, "LocCurrency": {"field_desc": "Location currency", "file_names": ["Loc"], "required": "R", "sql_data_type": "char(3)", "python_data_type": "string", "allow_blank": "NO", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN, "valid_values": ["AED", "AFA", "AFN", "ALL", "AMD", "ANG", "AOA", "AON", "ARS", "ATS", "AUD", "AWG", "AZM", "AZN", "BAM", "BBD", "BDT", "BEF", "BGL", "BGN", "BHD", "BIF", "BMD", "BND", "BOB", "BOV", "BRL", "BSD", "BTN", "BWP", "BYN", "BZD", "CAD", "CDF", "CHF", "CLF", "CLP", "CNY", "COP", "CRC", "CUP", "CVE", "CYP", "CZK", "DEM", "DJF", "DKK", "DOP", "DZD", "EEK", "EGP", "ERN", "ETB", "EUR", "FJD", "FKP", "FRF", "GBP", "GEL", "GHC", "GHS", "GIP", "GMD", "GNF", "GRD", "GTQ", "GYD", "HKD", "HNL", "HRK", "HTG", "HUF", "IDR", "IEP", "ILS", "INR", "IQD", "IRR", "ISK", "ITL", "JMD", "JOD", "JPY", "KES", "KGS", "KHR", "KMF", "KPW", "KRW", "KWD", "KYD", "KZT", "LAK", "LBP", "LKR", "LRD", "LSL", "LTL", "LUF", "LVL", "LYD", "MAD", "MDL", "MGA", "MKD", "MMK", "MNT", "MOP", "MRO", "MRU", "MTL", "MUR", "MVR", "MWK", "MXN", "MXP", "MXV", "MYR", "MZM", "MZN", "NAD", "NGN", "NIO", "NIS", "NLG", "NOK", "NPR", "NZD", "OMR", "PAB", "PEN", "PGK", "PHP", "PKR", "PLN", "PTE", "PYG", "QAR", "ROL", "RON", "RSD", "RUB", "RWF", "SAR", "SBD", "SCR", "SDD", "SDG", "SEK", "SGD", "SHP", "SIT", "SKK", "SLL", "SOS", "SRD", "SSP", "STD", "STN", "SVC", "SYP", "SZL", "THB", "TJS", "TMM", "TMT", "TND", "TOP", "TRL", "TRY", "TTD", "TWD", "TZS", "UAH", "UF", "UGX", "USD", "UYU", "UZS", "VEB", "VEF", "VES", "VND", "VUV", "WST", "XAF", "XCD", "XOF", "XPF", "YER", "ZAR", "ZMK", "ZMW", "ZWD", "ZWL"]}, "LocGrossPremium": {"field_desc": "Gross premium amount at location level", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocTax": {"field_desc": "Insurance tax amount at location level", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocBrokerage": {"field_desc": "Brokerage amount at location level", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocNetPremium": {"field_desc": "Net premium at location level", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "NonCatGroundUpLoss": {"field_desc": "Ground-Up non-cat loss value prior to the application of non-cat policy terms", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocParticipation": {"field_desc": "Percentage of risk that the insurer covers for this location. Values between 0 to 1 (e.g. 12% enterd as 0.12). Usually used in binders or offshore.", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "PayoutBasis": {"field_desc": "Pay-out basis for the claim (whether depreciation is taken into account). ACV = RCV - depreciation.", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN, "valid_values": [0, 1, 2]}, "ReinsTag": {"field_desc": "Reinsurance tag: user defined field to for defining treaty scope in the reinsurance scope file", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "LocDedCode1Building": {"field_desc": "Location building deductible code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDedType1Building": {"field_desc": "Location building deductible type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDed1Building": {"field_desc": "Location building deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMinDed1Building": {"field_desc": "Location minimum building deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMaxDed1Building": {"field_desc": "Location maximum building deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocDedCode2Other": {"field_desc": "Location other building deductible code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDedType2Other": {"field_desc": "Location other building deductible type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDed2Other": {"field_desc": "Location other building deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMinDed2Other": {"field_desc": "Location minimum other building deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMaxDed2Other": {"field_desc": "Location maximum other building deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocDedCode3Contents": {"field_desc": "Location contents deductible code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDedType3Contents": {"field_desc": "Location contents deductible type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDed3Contents": {"field_desc": "Location contents deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMinDed3Contents": {"field_desc": "Location minimum contents deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMaxDed3Contents": {"field_desc": "Location maximum contents deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocDedCode4BI": {"field_desc": "Location BI Deductible Code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDedType4BI": {"field_desc": "Location BI Deductible Type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDed4BI": {"field_desc": "Location BI deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMinDed4BI": {"field_desc": "Location minimum bi deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMaxDed4BI": {"field_desc": "Location maximum bi deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocDedCode5PD": {"field_desc": "Location PD deductible code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDedType5PD": {"field_desc": "Location PD deductible type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDed5PD": {"field_desc": "Location PD deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMinDed5PD": {"field_desc": "Location minimum PD deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMaxDed5PD": {"field_desc": "Location maximum PD deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocDedCode6All": {"field_desc": "Location blanket deductible code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDedType6All": {"field_desc": "Location blanket deductible type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocDed6All": {"field_desc": "Location site deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMinDed6All": {"field_desc": "Location minimum blanket deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocMaxDed6All": {"field_desc": "Location maximum blanket deductible", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocLimitCode1Building": {"field_desc": "Location building limit code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimitType1Building": {"field_desc": "Location building limit type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimit1Building": {"field_desc": "Location building limit", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocLimitCode2Other": {"field_desc": "Location other building limit code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimitType2Other": {"field_desc": "Location other building limit type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimit2Other": {"field_desc": "Location other building limit", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocLimitCode3Contents": {"field_desc": "Location contents limit code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimitType3Contents": {"field_desc": "Location contents limit type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimit3Contents": {"field_desc": "Location contents limit", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocLimitCode4BI": {"field_desc": "Location BI limit code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimitType4BI": {"field_desc": "Location BI limit type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimit4BI": {"field_desc": "Location BI limit", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocLimitCode5PD": {"field_desc": "Location PD limit code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimitType5PD": {"field_desc": "Location PD limit type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimit5PD": {"field_desc": "Location PD limit", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocLimitCode6All": {"field_desc": "Location site limit code", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimitType6All": {"field_desc": "Location site limit type", "file_names": ["Loc"], "required": "CR", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": NaN}, "LocLimit6All": {"field_desc": "Location site limit", "file_names": ["Loc"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "BIWaitingPeriod": {"field_desc": "BI waiting period (in days)", "file_names": ["Loc"], "required": "O", "sql_data_type": "smallint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "LocPeril": {"field_desc": "Perils for location financial terms", "file_names": ["Loc"], "required": "CR", "sql_data_type": "varchar(250)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "YearUpgraded": {"field_desc": "Year the building was upgraded (4 digit year)", "file_names": ["Loc"], "required": "O", "sql_data_type": "smallint", "python_data_type": "int", "allow_blank": "YES", "default": 0, "valid_value_range": "[0,)", "sec_mod": 1.0, "minval": "0"}, "SurgeLeakage": {"field_desc": "Storm leakage percentage (0% to 100%) for Wind only policies", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": -999, "valid_value_range": "[-999,-999], [0,1]", "sec_mod": 1.0, "minval": 0.0, "maxval": 1.0, "otherval": -999.0}, "SprinklerType": {"field_desc": "Sprinkler type", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5]}, "PercentSprinklered": {"field_desc": "Percent sprinklered. Values between 0 and 1 inclusive (0.5 = 50%); -999 is unknown", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "-999", "valid_value_range": "[-999,-999], [0,1]", "sec_mod": 1.0, "minval": 0.0, "maxval": 1.0, "otherval": -999.0}, "RoofCover": {"field_desc": "Code that represents the material used to cover the roof", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 11, 12, 13, 14, 15, 16, 18, 19, 2, 20, 21, 22, 23, 24, 25, 3, 4, 5, 6, 7, 8, 9]}, "RoofYearBuilt": {"field_desc": "Year the roof was last replaced (4 digit year)", "file_names": ["Loc"], "required": "O", "sql_data_type": "smallint", "python_data_type": "int", "allow_blank": "YES", "default": 0, "valid_value_range": "[0,)", "sec_mod": 1.0, "minval": "0"}, "RoofGeometry": {"field_desc": "Code that represents the shape of the roof", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9]}, "RoofEquipment": {"field_desc": "captures if mechanical or electric equipment is braced on the roof and the impact this modifier will have on the losses.", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "RoofFrame": {"field_desc": "Roof framing material", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "RoofMaintenance": {"field_desc": "Captures the impact roof maintenance has on the losses", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "BuildingCondition": {"field_desc": "Building condition", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "RoofAttachedStructures": {"field_desc": "Code that identifies items mounted on the roof, such as A/C units, skylights, or dormers", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, 9]}, "RoofDeck": {"field_desc": "Code that represents the materials used to construct the roof deck", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6, 7, 8]}, "RoofPitch": {"field_desc": "Code that represents the slope of the roof", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "RoofAnchorage": {"field_desc": "Code that represents the connections used to secure the roof support system to the walls", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}, "RoofDeckAttachment": {"field_desc": "Code that represents the connections used to secure the roof deck to the underlying roof support system", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6, 7]}, "RoofCoverAttachment": {"field_desc": "Code that represents the connections used to secure the roof covering to the roof deck", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "GlassType": {"field_desc": "Code that represents the type of glass used in the building", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5]}, "LatticeType": {"field_desc": "Code that represents the type of web used for H-shaped steel", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "FloodZone": {"field_desc": "Flood zone. Free text field.", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": 1.0}, "SoftStory": {"field_desc": "Code that indicates if there is structural weakness at any floor.  First floor garages and taller first floors are likely to exhibit soft-story behaviour.", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "Basement": {"field_desc": "Code that defines if there is a basement and if so whether it is finished or unfinished", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6]}, "BasementLevelCount": {"field_desc": "Indicates the number of basement levels in a structure (supports up to 5 levels; for more than 5, enter 5).", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,5]", "sec_mod": 1.0, "minval": "0", "maxval": "5"}, "WindowProtection": {"field_desc": "Code that represents the wind protection systems used on the windows", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "FoundationType": {"field_desc": "Code that represents the construction type of the building's foundation", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9]}, "WallAttachedStructure": {"field_desc": " \nCode that represents a structure that is physically attached to the building, such as garage or balcony", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}, "AppurtenantStructure": {"field_desc": " \nCode for the appurtenant building, such as shed or detached garage", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9]}, "ConstructionQuality": {"field_desc": "Construction quality", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9]}, "GroundEquipment": {"field_desc": "Captures whether mechanical or electrical equipment are present on the ground level of a building and impact it has on losses", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "EquipmentBracing": {"field_desc": "Identifies where mechanical or electrical equipment is held in place by bracing", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "Flashing": {"field_desc": "Refers to the impact the quality of the flashing or coping on a roof has on losses", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "BuildingShape": {"field_desc": "Code that represents the shape of the building", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]}, "ShapeIrregularity": {"field_desc": "Identifies vertical irregularities, overhangs and setbacks in the building design", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 2, 3, 4, 5]}, "Pounding": {"field_desc": "Code that represents the distance to the closest structure, which if not adequate, can cause the two structures to collide during earthquake shaking", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5]}, "Ornamentation": {"field_desc": "Code that represents the amount of decorative elements attached to the exterior of a building", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "SpecialEQConstruction": {"field_desc": "Presence of a seismic base isolation system", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "Retrofit": {"field_desc": "Presence of retro fit connectivity between walls and floor for retro fit buildings", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6, 7]}, "CrippleWall": {"field_desc": "Presence of cripple walls on the first floor or frame buildings", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "FoundationConnection": {"field_desc": "Connection of frame to foundation with or without bolts", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6]}, "ShortColumn": {"field_desc": "Code that indicates if there are short columns in the building", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "Fatigue": {"field_desc": "Captures signs of damage from prior earthquakes", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "Cladding": {"field_desc": "The presence and material of exterior building cladding", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 11, 12, 13, 14, 15, 16, 17, 2, 3, 4, 5, 6, 7, 8, 9]}, "BIPreparedness": {"field_desc": "BI preparedness", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "BIRedundancy": {"field_desc": "BI redundancy", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "FirstFloorHeight": {"field_desc": "Height of the lowest floor (above ground) of the building with respect to local ground elevation (NOT relative to datum). First floor in the US is identical to ground floor in Europe.", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "-999", "valid_value_range": "[-999,)", "sec_mod": 1.0, "minval": "-999"}, "FirstFloorHeightUnit": {"field_desc": "Code for the unit of measure used to express FirstFloorHeight", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "nan", "sec_mod": 1.0}, "Datum": {"field_desc": "Datum reference for the elevation fields (e.g. NAVD88; WGS84)", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": 1.0}, "GroundElevation": {"field_desc": "Flood or Windstorm - Elevation of the local ground surface at the building at this location. This field represents the elevation of the grade (local ground surface) with respect to the datum (e.g. NAVD88).", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "-999", "valid_value_range": "[-999,)", "sec_mod": 1.0, "minval": "-999"}, "GroundElevationUnit": {"field_desc": "Code for the unit of measure used to express the GroundElevation", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "nan", "sec_mod": 1.0}, "Tank": {"field_desc": "Code that indicates if there are rooftop tanks on the adjoining higher buildings", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "Redundancy": {"field_desc": "Indicates whether there are multiple lateral load resisting elements, such as frames or shear walls", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "InternalPartition": {"field_desc": "Interior wall partitions or chimneys made from URM", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5]}, "ExternalDoors": {"field_desc": "Wind resistant doors, doors with a certain rating of hurricane protection", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6]}, "Torsion": {"field_desc": "Code that represents the layout of structural elements that can lead to torsional loads", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "MechanicalEquipmentSide": {"field_desc": "Mechanical or electrical equipment at the side", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "ContentsWindVuln": {"field_desc": "Contents relative vulnerability to windstorm or tornado", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "ContentsFloodVuln": {"field_desc": "Contents relative vulnerability to flood", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5]}, "ContentsQuakeVuln": {"field_desc": "Contents relative vulnerability to earthquake", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "SmallDebris": {"field_desc": "Code that identifies whether small debris are present within 200 meters of the structure", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "FloorsOccupied": {"field_desc": "Number of floors in the building that are occupied (separated by semi-colons). Each floor occupied is separated by a semi-colon. Ranges are not accepted. 0 = ground floor, -1 = first level of basement, -2 = second level of basement; 1 = first floor, 2 = second floor, etc.", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(255)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": 1.0}, "FloodDefenseHeight": {"field_desc": "Height of any site specific flood defenses protecting the property with respect to local ground elevation (NOT to datum).", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "-999", "valid_value_range": "[-999,)", "sec_mod": 1.0, "minval": "-999"}, "FloodDefenseHeightUnit": {"field_desc": "Code for the unit of measure used to express the FloodDefenseHeight", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "nan", "sec_mod": 1.0}, "FloodDebrisResilience": {"field_desc": "Shows if building is vulnerable to floating debris", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "BaseFloodElevation": {"field_desc": "Water surface elevation (relative to datum - this is NOT a flood depth) corresponding to a flood having a 1% probability of being equaled or exceeded in a given year. A value of -999 for this field represents unknown/default.", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "-999", "valid_value_range": "[-999,-999], [0,1]", "sec_mod": 1.0, "minval": 0.0, "maxval": 1.0, "otherval": -999.0}, "BaseFloodElevationUnit": {"field_desc": "Code for the unit of measure used to express the BaseFloodElevation", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "nan", "sec_mod": 1.0}, "BuildingHeight": {"field_desc": "Total height of the structure", "file_names": ["Loc"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "-999", "valid_value_range": "[-999,)", "sec_mod": 1.0, "minval": "-999"}, "BuildingHeightUnit": {"field_desc": "Units of the BuildingHeight", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "1", "valid_value_range": "nan", "sec_mod": 1.0}, "BuildingValuation": {"field_desc": "Field for third party valuation data", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": 1.0}, "TreeExposure": {"field_desc": "Secondary modifier coding density of trees adjacent to structure", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "Chimney": {"field_desc": "Code that indicates if the structure has a chimney and, if so, the height of the chimney", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "BuildingType": {"field_desc": "Building type (e.g. detached, terraced, etc)", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9]}, "Packaging": {"field_desc": "Describes the susceptibility of the packaging of a risk to the peril", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "Protection": {"field_desc": "Describes the level of protection from the specific peril", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "SalvageProtection": {"field_desc": "The salvage potential of a particular product", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "ValuablesStorage": {"field_desc": "Where the specie element is stored", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4, 5, 6, 7]}, "DaysHeld": {"field_desc": "Number of days cargo is kept at port or the duration of an exhibition. Values between 0 to 1825 (up to 5 years). Default = 365.", "file_names": ["Loc"], "required": "O", "sql_data_type": "smallint", "python_data_type": "int", "allow_blank": "YES", "default": "365", "valid_value_range": "[0,1825]", "sec_mod": 1.0, "minval": "0", "maxval": "1825"}, "BrickVeneer": {"field_desc": "Code that represents the percentage of external walls that consist of brick veneer.", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "FEMACompliance": {"field_desc": "Indicates whether the building is in compliance with the FEMA flood zone requirements in both design and construction", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "CustomFloodSOP": {"field_desc": "Standard of flood protection return period; values from 0-10,000", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,10000]", "sec_mod": 1.0, "minval": "0", "maxval": "10000"}, "CustomFloodZone": {"field_desc": "User-defined flood zone", "file_names": ["Loc"], "required": "O", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": 1.0}, "MultiStoryHall": {"field_desc": "Code that indicates if the building has a multi-story hall", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "BuildingExteriorOpening": {"field_desc": "Code that represents the percentage of exterior walls that are open (i.e. have windows or doors)", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "ServiceEquipmentProtection": {"field_desc": "Code that indicates whether the service equipment is protected from flood", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2]}, "TallOneStory": {"field_desc": "The height of the taller than usual one-story building (e.g. gymnasium, auditorium, church, etc.)", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3]}, "TerrainRoughness": {"field_desc": "Terrain conditions around the building.", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": "0", "valid_value_range": "nan", "sec_mod": 1.0, "valid_values": [0, 1, 2, 3, 4]}, "NumberOfOccupants": {"field_desc": "Number of Occupants", "file_names": ["Loc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "Payroll": {"field_desc": "Total payroll", "file_names": ["Loc"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "ReinsNumber": {"field_desc": "Reinsurance number to link with ReinsInfo file", "file_names": ["ReinsScope"], "required": "R", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "NO", "default": NaN, "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "ReinsName": {"field_desc": "Reinsurance name", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "varchar(30)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "ReinsLayerNumber": {"field_desc": "Reinsurance layer for information / ordering purposes", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "int", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "ReinsPeril": {"field_desc": "Perils for reinsurance financial terms", "file_names": ["ReinsInfo"], "required": "R", "sql_data_type": "varchar(250)", "python_data_type": "string", "allow_blank": "NO", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "ReinsInceptionDate": {"field_desc": "Reinsurance inception date - in ISO 8601 format: YYYY-MM-DD", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "smalldatetime", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "ReinsExpiryDate": {"field_desc": "Reinsurance expiry date - in ISO 8601 format: YYYY-MM-DD", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "smalldatetime", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "CededPercent": {"field_desc": "Ceded percentage (for 12%, enter 0.12). Within the reinsurance scope file, CededPercent should only be entered for surplus share treaties.", "file_names": ["ReinsScope"], "required": "CR", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": 1, "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "RiskLimit": {"field_desc": "Reinsurance per-risk limit", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "RiskAttachment": {"field_desc": "Reinsurance per-risk attachment point", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "OccLimit": {"field_desc": "Reinsurance occurrence limit", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "OccAttachment": {"field_desc": "Reinsurance per occurrence attachment", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "OccFranchiseDed": {"field_desc": "Reinsurance franchise deductible", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "OccReverseFranchise": {"field_desc": "Reinsurance reverse franchise - a value of loss that, if exceeded, results in no payment being made for this event from the reinsurer to insurer.", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AggLimit": {"field_desc": "Maximum amount payable under this treaty during the AggPeriod", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AggAttachment": {"field_desc": "The aggregate monetary amount during a given AggPeriod that the resinured retains under this treaty", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "AggPeriod": {"field_desc": "Aggregate period associated with the aggregate limits and attachments (in days). Default value = 365 (1 year)", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "365", "valid_value_range": "[0,3650]", "sec_mod": NaN, "minval": "0", "maxval": "3650"}, "PlacedPercent": {"field_desc": "Percentage of the limit that has been placed in the reinsurance market. The main percentage used for reinsurance treaties other than surplus. Applies after other reinsurance terms. Values between 0 to 1 (e.g. 12% entered as 0.12)", "file_names": ["ReinsInfo"], "required": "R", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "NO", "default": NaN, "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "ReinsCurrency": {"field_desc": "Reinsurance currency", "file_names": ["ReinsInfo"], "required": "R", "sql_data_type": "char(3)", "python_data_type": "string", "allow_blank": "NO", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "InuringPriority": {"field_desc": "Reinsurance inuring priority capturing the order in which reinsurance contracts apply. Treaties with lower number inuring priorities apply first.", "file_names": ["ReinsInfo"], "required": "R", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "NO", "default": NaN, "valid_value_range": "[1,)", "sec_mod": NaN, "minval": "1"}, "ReinsType": {"field_desc": "Type of reinsurance contract", "file_names": ["ReinsInfo"], "required": "R", "sql_data_type": "varchar(3)", "python_data_type": "string", "allow_blank": "NO", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN, "valid_values": ["AXL", "CXL", "FAC", "PR", "QS", "SS"]}, "AttachmentBasis": {"field_desc": "Reinsurance attachment basis", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "char(2)", "python_data_type": "string", "allow_blank": "YES", "default": "('LO')", "valid_value_range": "nan", "sec_mod": NaN, "valid_values": ["LO", "RA"]}, "Reinstatement": {"field_desc": "Number of reinstatements", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": NaN, "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "ReinstatementCharge": {"field_desc": "Reinstatement charge as %; semi-colon separated if different for each reinstatement (e.g. 1-free, 2-50%, 3-100% should be entered as: 0;0.5;1). If all reinstatements are the same, then just one number is sufficient (e.g. 3 reinstatements at 100% should be entered as 1)", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "varchar(50)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "ReinsPremium": {"field_desc": "Reinsurance premium", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "DeemedPercentPlaced": {"field_desc": "Deemed percent placed, used to represent notional contracts or any part of the contract being notional. For fully notional contracts, enter 1 (i.e. 100%). For partially placed contracts, enter any value between 0 and 1. For real contracts, enter 0.", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "0", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "ReinsFXrate": {"field_desc": "Reinsurance exchange rate (as the contractual reinsurance rate can be different from the actual exchange rates used for policies and locations)", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,)", "sec_mod": NaN, "minval": "0"}, "TreatyShare": {"field_desc": "The percentage of a treaty that a given reinsurer may write. Values between 0 to 1 (e.g. 12% entered as 0.12).", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "float", "python_data_type": "float", "allow_blank": "YES", "default": "1", "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "UseReinsDates": {"field_desc": "A flag to indicate if reinsurance contract dates or  policy inception / expiry dates are to be considered when calculating losses (Y) or ignored (N).", "file_names": ["ReinsInfo"], "required": "O", "sql_data_type": "char(1)", "python_data_type": "string", "allow_blank": "YES", "default": "N", "valid_value_range": "nan", "sec_mod": NaN}, "RiskLevel": {"field_desc": "Code to indicate the definition of 'risk' for the per-risk terms in this particular treaty (or portion of the treaty)", "file_names": ["ReinsInfo"], "required": "R", "sql_data_type": "char(3)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN, "valid_values": ["   ", "ACC", "LGR", "LOC", "POL"]}, "StaticMotorVehicle": {"field_desc": "Identifies whether a risk is static or dynamic (moves from location to location)", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": 0, "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1", "valid_values": [0, 1]}, "CondClass": {"field_desc": "Flags whether a condition is a policy restriction", "file_names": ["Acc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": 0, "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1"}, "CondTag": {"field_desc": "Identifies a group of locations which are subject to one or more conditions.", "file_names": ["Acc", "Loc"], "required": "CR", "sql_data_type": "varchar(20)", "python_data_type": "string", "allow_blank": "YES", "default": NaN, "valid_value_range": "nan", "sec_mod": NaN}, "OEDVersion": {"field_desc": "The OED schema version of the file", "file_names": ["Acc", "Loc", "ReinsInfo", "ReinsScope"], "required": "O", "sql_data_type": "varchar(10)", "python_data_type": "string", "allow_blank": "YES", "default": "latest version", "valid_value_range": "nan", "sec_mod": NaN}, "IsAggregate": {"field_desc": "Agggrated Data based on NumberOfBuildings field", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "YES", "default": 0, "valid_value_range": "[0,1]", "sec_mod": NaN, "minval": "0", "maxval": "1", "valid_values": [1, 0]}, "OccupantPeriod": {"field_desc": "Period/time of day/season for 'NumberOfOccupants'", "file_names": ["Loc"], "required": "O", "sql_data_type": "tinyint", "python_data_type": "int", "allow_blank": "Yes", "default": 0, "valid_value_range": "[0,8]", "sec_mod": NaN, "minval": "0", "maxval": "8", "valid_values": [0, 1, 2, 3, 4, 5, 6, 7, 8]}}